'use strict';

//проверка является ли значение числом, НО нужно чтобы 55ff возвращало 55, а строки, пробелы и пустые строки -  false
/*--------------------------------------------------

const getCost = () => {
    return parseFloat(prompt('Enter cost'));
};

const checkIfInt = (number) => {
    while (isNaN(number)) {
        let newCost = getCost();
        if (!isNaN(newCost)) {
            return !isNaN(newCost);
        }
    }
    return !isNaN(number);
};
console.log(checkIfInt(getCost()));


*/

//Усложненное 1
/*let arr = ['2342', '568463', '23413', '622', '39843', '465465'];
for (let elem of arr) {
    if (elem[0] === '2' || elem[0] === '4') {
        console.log(elem);
    }
}
*/

//Усложненное 2
//Условие, если число не простое, то есть делится кроме себя на цело хотя бы на еще одно число, то его не выводим
//число 9 делится на цело кроме себя еще на число 3, поэтому оно не подходит
//Будет 2 цикла, в первом перебирается первый операнд, во втором - второй
//то есть, если в первом цикле у нас число 91, то во втором цикле перебираются все числа от 2 до этого числа 91 включительно
let flag = true; //флаг будет показывать, является ли число простым, если число поделится на цело на другое число хотябы 1 раз, то флаг станет false
for (let i = 1; i < 101; i++) {
    flag = true; // каждый раз обнуляем флаг, так как предыдущее число могло после себя оставить false,
    //и тогда после него ни одно число не выведется
    for (let j = 2; j <= i; j++) {
        //j = 2 , начинаем с 2, так как нет сымсла проверять деление на единицу, так как все на нее делятся
        //j <= i такое условие, так как нет сымсла проверять
        //такие деления 5/30 или 18/30, то есть второе число (j) не должно превышать первое число (i)
        if (i % j === 0) {
            //если остаток от деления хотябы на одно из чисел равен 0,
            //то число пропускаем, делаем flag = false, и не выводим данное число
            if (i === j) {
                continue; //НО например так как 5 % 5 === 0, то оно должно быть пропущено,
                //А по условию число при делении на себя должно выводиться, поэтому если операнды равны, то выводим число
            }
            flag = false; // если число хотя бы раз поделилось нацело на другое число(кроме себя),
            //то делаем его типо прокаженным, с плохим флагом и не выводим и заканчиваем цикл пебора делителей для числа i
            break;
        }
    }
    if (flag === false) {
        // если число хотя бы раз поделилось нацело на другое число(кроме себя), то оно не будет выводиться.
        continue;
        //Итерация завершится, не дойдя до вывода числа
    }
    console.log(i);
}
